.. _Processing:

**********
Processing
**********
This page contains additional information regarding pet2mri processing.


Input
=====
Before a PET image can be processed with pet2mri, the subject must have an anatomical (e.g. 3D-T1) volume that has been
processing with FreeSurfer's 'recon-all' processing stream., The input PET image must be a 3D volume in Nifti or MGH format. Support for DICOM and raw dynamic scans is coming soon.

Registration
============
The registration type is specified by the -r flag and is required. Two types of registration procedures are supported by pet2mri:

- Boundary-based registration (bb)
- Normalized mutual information registration (mi)

Boundary-based registration uses the FreeSurfer bbregister command under the hood. In brief, it maximizes the gradient
across the grey white matter interface. Normalized mutual information registration performs similarly to spm_coreg in Matlab.

For boundary-based registration, the contrast can be specified with the -c flag. Possible values
are 't1', 't2', and 'bold'. If a contrast is not supplied, then 't1' will be assumed for the registration.

If you have already generated a registration file (e.g. regfile.dat), you can tell pet2mri to use your registration
file instead of computing a registration from scratch. This can be specified with the -rd flag.

Quantification
==============
After registering the PET volume to the structural image, an SUVr volume is generated by dividing each
voxel value by the mean uptake in the cerebellar grey matter. Additionally, regional SUVr values are calculated
by averaging SUVr values over each grey matter region from the Desikan-Killiany atlas. These regional values are
saved to a text file (see Outputs section).

If you are interested in using a different reference region, you have the option of passing a mask for your
desired reference region. This can be specified with the -rf flag.

Screenshots
===========
Screen shots of the coregistered PET overlaid on the structural image are generated (primarily for quality control
purposes). This is done by loading the coregistered PET volume (not SUVr volume) with nibabel and generated slices with
matplotlib.

Testing
========
Thus far, pet2mri has been tested on preprocessed images from the Alzheimer's Disease Neuroimaging Initiative. I've now
used pet2mri on around 100 florbetapir and flortaucipir scans, mostly using boundary-based registration.